buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
    }
}

plugins {
    id 'java'
}

apply plugin: "io.spring.dependency-management"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://s3-us-west-2.amazonaws.com/dynamodb-local/release'
    }
}

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
        mavenBom 'org.apache.logging.log4j:log4j-bom:2.11.0'
    }
}

dependencies {
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.1.0'

    compile 'com.google.guava:guava:25.1-jre'

    compile 'org.apache.logging.log4j:log4j-api'
    compile 'org.apache.logging.log4j:log4j-core'

    compile 'com.amazonaws:aws-java-sdk-dynamodb'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.2.0'

    testCompile 'com.amazonaws:DynamoDBLocal:[1.11,2.0)'
    testCompile 'org.assertj:assertj-core:3.10.0'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip

test {
    useJUnitPlatform()
}

task copyNativeDeps(type: Copy) {
    from (configurations.testCompile) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/libs'
}

test.dependsOn copyNativeDeps
test.doFirst {
    systemProperty "java.library.path", 'build/libs'
}